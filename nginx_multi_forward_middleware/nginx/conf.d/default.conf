# GOOGLE: http forward nginx
# GOOGLE: http proxy pass nginx
# GOOGLE: http reverse proxy nginx
# GOOGLE: nginx pass multiple request
# GOOGLE: http shadowing
# GOOGLE: scgi fastcgi uwsgi
# GOOGLE: Nginx Middleware
# GOOGLE: Nginx Chain Request

# https://nginx.org/en/docs/
# https://nginx.org/en/docs/http/ngx_http_core_module.html#location
# https://nginx.org/en/docs/http/ngx_http_core_module.html#variables
# https://nginx.org/en/docs/http/ngx_http_headers_module.html
# https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass

# https://www.nginx.com/resources/wiki/modules/lua/
# https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-subrequest-authentication/
# https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/
# https://docs.nginx.com/nginx/admin-guide/dynamic-modules/lua/
# # https://github.com/openresty/lua-nginx-module#readme
# # https://github.com/openresty/lua-nginx-module#directives
# https://www.nginx.com/blog/harnessing-power-convenience-of-javascript-for-each-request-with-nginx-javascript-module/
# https://www.nginx.com/blog/deploying-nginx-plus-as-an-api-gateway-part-1/
# https://www.nginx.com/blog/deploying-nginx-plus-as-an-api-gateway-part-2-protecting-backend-services/
# https://www.nginx.com/blog/deploying-nginx-plus-as-an-api-gateway-part-3-publishing-grpc-services/
# https://unit.nginx.org/keyfeatures/#supported-app-languages
# https://www.baeldung.com/nginx-forward-proxy

# https://serverfault.com/questions/1018050/modify-response-header-with-nginx
# https://serverfault.com/questions/413387/how-to-replicate-nginx-data-to-two-servers
# https://superuser.com/questions/1436131/nginx-dispatch-a-request-to-multiple-endpoints
# https://stackoverflow.com/questions/18638232/chaining-sequential-request-handlers-based-on-the-response-recieved-by-each
# https://stackoverflow.com/questions/76391042/nginx-forward-request-to-multiple-endpoint-in-order-and-pass-each-response-as-ne


server {
    listen 80;
    # server_name localhost;

    add_header X-HTTP-Host $http_host always;
    add_header X-URI $uri always;
    add_header X-Is-Args $is_args always;
    add_header X-Args $args always;
    add_header X-Request-URI $request_uri always;

    location /svc/ {
        proxy_pass http://localhost:13485/;
        proxy_hide_header X-Powered-By;
        add_header X-Powered-By Me always;
    }

    location /endpoint/ {
        # mirror /mirror1;
        proxy_pass http://localhost:13485/verify/;
        post_action /mirror1;
        # proxy_pass "http://localhost:13485/endpoint#";
    }

    location /mirror1 {
        internal;
        # proxy_pass http://localhost:13485/verify/;
        proxy_pass "http://localhost:13485/endpoint#";
    }
}
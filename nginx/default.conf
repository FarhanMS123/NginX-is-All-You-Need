# GOOGLE: http forward nginx
# GOOGLE: http proxy pass nginx
# GOOGLE: http reverse proxy nginx
# GOOGLE: nginx pass multiple request
# GOOGLE: http shadowing
# https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/
# https://nginx.org/en/docs/
# https://nginx.org/en/docs/http/ngx_http_core_module.html#location
# https://nginx.org/en/docs/http/ngx_http_core_module.html#variables
# https://nginx.org/en/docs/http/ngx_http_headers_module.html
# https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
# https://serverfault.com/questions/1018050/modify-response-header-with-nginx
# https://serverfault.com/questions/413387/how-to-replicate-nginx-data-to-two-servers
# https://superuser.com/questions/1436131/nginx-dispatch-a-request-to-multiple-endpoints
# https://www.baeldung.com/nginx-forward-proxy


server {
    listen 80;
    # server_name localhost;

    add_header X-HTTP-Host $http_host always;
    add_header X-URI $uri always;
    add_header X-Is-Args $is_args always;
    add_header X-Args $args always;
    add_header X-Request-URI $request_uri always;

    location /svc/ {
        proxy_pass http://localhost:13485/;
        proxy_hide_header X-Powered-By;
        add_header X-Powered-By Me always;
    }

    location /endpoint/ {
        mirror /mirror1;
        proxy_pass http://localhost:13485/verify/;
        # proxy_pass "http://localhost:13485/endpoint#";
    }

    location /mirror1 {
        internal;
        # proxy_pass http://localhost:13485/verify/;
        proxy_pass "http://localhost:13485/endpoint#";
    }
}